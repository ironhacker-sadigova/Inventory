<?php
use AF\Domain\AF;
use AF\Domain\Algorithm\Selection\MainSelectionAlgo;
use MyCLabs\MUIH\Collapse;

/** @var $af AF */
$af = $this->af;


// Algo principal
$algoMainCollapse = new Collapse('algoMainCollapse', __('AF', 'configTreatmentCollapse', 'executionAlgorithmCollapse'));
$algoMainForm = new UI_Form('mainAlgo');
$algoMainForm->setAction('af/edit/algo-main-submit/id/' . $af->getId());
$algoMainExpression = new UI_Form_Element_Textarea('expression');
$algoMainExpression->setLabel('Expression');
$algoMainExpression->setAttrib('rows', '5');
/** @var $algo MainSelectionAlgo */
$mainAlgo = $af->getMainAlgo();
if ($mainAlgo->getExpression()) {
    $algoMainExpression->setValue($mainAlgo->getExpression());
}
$algoMainForm->addElement($algoMainExpression);
$algoMainForm->addSubmitButton();
$algoMainCollapse->setContent($algoMainForm->render());
echo $algoMainCollapse->render();


// Algorithmes numériques
$algoNumericCollapse = new Collapse(
    'algoNumericCollapse',
    __('AF', 'configTreatmentCollapse', 'numericAlgorithmCollapse')
);

// Numeric expression
$algoNumericExpressionCollapse = new Collapse('algoNumericExpressionCollapse', __('TEC', 'name', 'expressions'));
$algoNumericExpressionCollapse->setContent($this->partial('edit/algos/numeric-expression.phtml', ['af' => $af]));
// Parameter
$algoNumericParameterCollapse = new Collapse('algoNumericParameterCollapse', __('UI', 'name', 'parameters'));
$algoNumericParameterCollapse->setContent($this->partial('edit/algos/numeric-parameter.phtml', ['af' => $af]));
// Constantes
$algoNumericConstantCollapse = new Collapse('algoNumericConstantCollapse', __('UI', 'name', 'constants'));
$algoNumericConstantCollapse->setContent($this->partial('edit/algos/numeric-constant.phtml', ['af' => $af]));
// Numeric input
$algoNumericInputCollapse = new Collapse(
    'algoNumericInputCollapse',
    __('AF', 'configTreatmentCollapse', 'numericInputCollapse')
);
$algoNumericInputCollapse->setContent(
    $this->partial('edit/algos/numeric-input.phtml', ['af' => $af, 'numericInputList' => $this->numericInputList])
);

$algoNumericCollapse->setContent(
    $algoNumericExpressionCollapse->render()
    . $algoNumericParameterCollapse->render()
    . $algoNumericConstantCollapse->render()
    . $algoNumericInputCollapse->render()
);
echo $algoNumericCollapse->render();


// Algorithmes de sélection
$algoSelectionTextKeyCollapse = new Collapse(
    'algoSelectionTextKeyCollapse',
    __('AF', 'configTreatmentCollapse', 'textkeySelectionAlgorithmCollapse')
);

// Algorithmes de sélection de type "Expression"
$algoSelectionTextKeyExpressionCollapse = new Collapse(
    'algoSelectionTextKeyExpressionCollapse',
    __('TEC', 'name', 'expressions')
);
$algoSelectionTextKeyExpressionCollapse->setContent(
    $this->partial('edit/algos/selection-textkey-expression.phtml', ['af' => $af])
);

// Algorithmes de sélection à partir d'une saisie de champ de sélection simple
$algoSelectionTextKeyInputCollapse = new Collapse(
    'algoSelectionTextKeyInputCollapse',
    __('AF', 'configTreatmentCollapse', 'inputTextkeySelectionCollapse')
);
$algoSelectionTextKeyInputCollapse->setContent(
    $this->partial('edit/algos/selection-textkey-input.phtml', ['af' => $af])
);

// Algorithmes de sélection de type "ContextValue"
$algoSelectionTextKeyContextValueCollapse = new Collapse(
    'algoSelectionTextKeyContextValueCollapse',
    __('AF', 'configTreatmentCollapse', 'orgaCoordinateTextkeySelectionCollapse')
);
$algoSelectionTextKeyContextValueCollapse->setContent(
    $this->partial('edit/algos/selection-textkey-context-value.phtml', ['af' => $af])
);

$algoSelectionTextKeyCollapse->setContent(
    $algoSelectionTextKeyExpressionCollapse->render()
    . $algoSelectionTextKeyInputCollapse->render()
    . $algoSelectionTextKeyContextValueCollapse->render()
);
echo $algoSelectionTextKeyCollapse->render();


// Conditions
$algoConditionCollapse = new Collapse('algoConditionCollapse', __('UI', 'name', 'conditions'));

// Conditions composées
$algoConditionExpressionCollapse = new Collapse(
    'algoConditionExpressionCollapse',
    __('AF', 'configInteractionCollapse', 'composedConditionCollapse')
);
$algoConditionExpressionCollapse->setContent($this->partial('edit/algos/condition-expression.phtml', ['af' => $af]));

// Conditions élémentaires
$algoConditionElementaryCollapse = new Collapse(
    'algoConditionElementaryCollapse',
    __('AF', 'configInteractionCollapse', 'elementaryConditionCollapse')
);
$algoConditionElementaryCollapse->setContent(
    $this->partial('edit/algos/condition-elementary.phtml', ['af' => $af, 'fieldList' => $this->fieldList])
);

$algoConditionCollapse->setContent(
    $algoConditionExpressionCollapse->render()
    . $algoConditionElementaryCollapse->render()
);
echo $algoConditionCollapse->render();
?>

<script>
    $('#algoNumericExpressionCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoNumericExpressionCollapse_wrapper') {
            algoNumericExpression.filter();
        }
    });
    $('#algoNumericParameterCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoNumericParameterCollapse_wrapper') {
            algoNumericParameter.filter();
        }
    });
    $('#algoNumericConstantCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoNumericConstantCollapse_wrapper') {
            algoNumericConstant.filter();
        }
    });
    $('#algoNumericInputCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoNumericInputCollapse_wrapper') {
            algoNumericInput.filter();
        }
    });
    $('#algoSelectionTextKeyExpressionCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoSelectionTextKeyExpressionCollapse_wrapper') {
            algoSelectionTextkeyExpression.filter();
        }
    });
    $('#algoSelectionTextKeyInputCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoSelectionTextKeyInputCollapse_wrapper') {
            algoSelectionTextkeyInput.filter();
        }
    });
    $('#algoSelectionTextKeyContextValueCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoSelectionTextKeyContextValueCollapse_wrapper') {
            algoSelectionTextkeyContextValue.filter();
        }
    });
    $('#algoConditionExpressionCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoConditionExpressionCollapse_wrapper') {
            algoConditionExpression.filter();
        }
    });
    $('#algoConditionElementaryCollapse').on('show', function(e) {
        if ($(e.target).attr('id') == 'algoConditionElementaryCollapse_wrapper') {
            algoConditionElementary.filter();
        }
    });
</script>
