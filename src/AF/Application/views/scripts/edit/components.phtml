<?php
use MyCLabs\MUIH\Collapse;

$script = '';


// Groupes
$groups = new Collapse('groups', __('AF', 'configComponentCollapse', 'groupCollapse'));
$groups->setContent($this->partial('edit/components/groups.phtml', ['af' => $this->af]));
echo $groups->render();

$script .= <<<JS
$('#groups').on('show', function(e) {
    if ($(e.target).attr('id') == 'groups_wrapper') {
        groupDatagrid.filter();
    }
});
JS;


// Sous-formulaires non répétés
$subAFNotRepeated = new Collapse('subAFNotRepeated', __('AF', 'configComponentCollapse', 'nonRepeatedSubFormCollapse'));
$subAFNotRepeated->setContent($this->partial('edit/components/sub-af-not-repeated.phtml', ['af' => $this->af]));
echo $subAFNotRepeated->render();

$script .= <<<JS
$('#subAFNotRepeated').on('show', function(e) {
    if ($(e.target).attr('id') == 'subAFNotRepeated_wrapper') {
        subAfNotRepeatedDatagrid.filter();
    }
});
JS;


// Sous-formulaires répétés
$subAFRepeated = new Collapse('subAFRepeated', __('AF', 'configComponentCollapse', 'repeatedSubFormCollapse'));
$subAFRepeated->setContent($this->partial('edit/components/sub-af-repeated.phtml', ['af' => $this->af]));
echo $subAFRepeated->render();

$script .= <<<JS
$('#subAFRepeated').on('show', function(e) {
    if ($(e.target).attr('id') == 'subAFRepeated_wrapper') {
        subAfRepeatedDatagrid.filter();
    }
});
JS;


// Champs numériques
$numericFields = new Collapse('numericFields', __('AF', 'configComponentCollapse', 'numericInputFieldCollapse'));
$numericFields->setContent($this->partial('edit/components/numeric-fields.phtml', ['af' => $this->af]));
echo $numericFields->render();

$script .= <<<JS
$('#numericFields').on('show', function(e) {
    if ($(e.target).attr('id') == 'numericFields_wrapper') {
        numericFieldDatagrid.filter();
    }
});
JS;


// Champs de sélection simple
$selectSingleFields = new Collapse('selectSingleFields', __('AF', 'configComponentCollapse', 'singleSelectionFieldCollapse'));
$selectSingleFields->setContent($this->partial('edit/components/select-single-fields.phtml', ['af' => $this->af]));
echo $selectSingleFields->render();

$script .= <<<JS
$('#selectSingleFields').on('show', function(e) {
    if ($(e.target).attr('id') == 'selectSingleFields_wrapper') {
        selectSingleFieldDatagrid.filter();
    }
});
JS;


// Champs de sélection multiple
$selectMultiFields = new Collapse('selectMultiFields', __('AF', 'configComponentCollapse', 'multipleSelectionFieldCollapse'));
$selectMultiFields->setContent($this->partial('edit/components/select-multi-fields.phtml', ['af' => $this->af]));
echo $selectMultiFields->render();

$script .= <<<JS
$('#selectSingleFields').on('show', function(e) {
    if ($(e.target).attr('id') == 'selectSingleFields_wrapper') {
        selectSingleFieldDatagrid.filter();
    }
});
JS;


// Checkbox
$checkboxFields = new Collapse('checkboxFields', __('AF', 'configComponentCollapse', 'booleanFieldCollapse'));
$checkboxFields->setContent($this->partial('edit/components/checkbox-fields.phtml', ['af' => $this->af]));
echo $checkboxFields->render();

$script .= <<<JS
$('#checkboxFields').on('show', function(e) {
    if ($(e.target).attr('id') == 'checkboxFields_wrapper') {
        checkboxFieldDatagrid.filter();
    }
});
JS;


// Text
$textFields = new Collapse('textFields', __('AF', 'configComponentCollapse', 'textFieldCollapse'));
$textFields->foldedByDefault = true;
$textFields->setContent($this->partial('edit/components/text-fields.phtml', ['af' => $this->af]));
echo $textFields->render();

$script .= <<<JS
$('#textFields').on('show', function(e) {
    if ($(e.target).attr('id') == 'textFields_wrapper') {
        textFieldDatagrid.filter();
    }
});
JS;

$script .= <<<JS
$('body').on('submit', '#copyTechnoMembersAsOptions', function(e) {
    e.preventDefault();
    var form = $(this);
    var submit = $('button[type="submit"]', form);
    if (submit.hasClass('disabled')) {
        return;
    }
    submit.addClass('disabled');
    $.ajax({
        url: form.attr('action'),
        type: "POST",
        data: form.serializeArray(),
        success: function(data) {
            addMessage(data.message, 'success');
            optionDatagrid.filter();
        },
        error: function(jqXHR) {
            var data = $.parseJSON(jqXHR.responseText);
            addMessage(data.message, data.typeError);
        },
        complete: function(jqXHR) {
            submit.removeClass('disabled');
        }
    });
});
JS;
?>

<script>
    <?=$script?>
</script>
