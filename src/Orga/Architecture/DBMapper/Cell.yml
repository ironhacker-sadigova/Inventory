Orga\Domain\Cell:
  type: entity
  repositoryClass: \Orga\Architecture\Repository\CellRepository
  table: Orga_Cell

  id:
    id:
      column: id
      type: integer
      generator:
        strategy: AUTO

  fields:
    membersHashKey:
      column: membersHashKey
      type: string
      length: 40
      nullable: false
    tag:
      column: tag
      type: text
      nullable: false
    relevant:
      column: relevant
      type: boolean
      nullable: false
    allParentsRelevant:
      column: allParentsRelevant
      type: boolean
      nullable: false
    inventoryStatus:
      column: inventoryStatus
      type: string
      length: 35
      nullable: false
    inputStatus:
      column: inputStatus
      type: string
      length: 35
      nullable: false
    numberOfInconsistenciesInInputSet:
      column: numberOfInconsistenciesInInputSet
      type: integer
      nullable: true

  oneToOne:
    docLibraryForAFInputSetPrimary:
      targetEntity: Doc\Domain\Library
      joinColumn:
        name: idDocLibraryForAFInputSetsPrimary
        referencedColumnName: id
        nullable: true
        unique: true
      orphanRemoval: true
      cascade: [ persist, remove ]
    aFInputSetPrimary:
      targetEntity: AF\Domain\InputSet\PrimaryInputSet
      joinColumn:
        name: idAFInputSetPrimary
        referencedColumnName: id
        nullable: true
      orphanRemoval: true
      cascade: [ persist, remove ]
    dWCube:
      targetEntity: DW\Domain\Cube
      joinColumn:
        name: idDWCube
        referencedColumnName: id
        nullable: true
        unique: true
      orphanRemoval: true
      cascade: [ persist, remove ]

  oneToMany:
    subCellsGroups:
      targetEntity: SubCellsGroup
      mappedBy: containerCell
      cascade: [ persist, remove ]
    roles:
      targetEntity: Orga\Domain\ACL\AbstractCellRole
      mappedBy: cell
      cascade: [ all ]
    commentsForAFInputSetPrimary:
      targetEntity: Orga\Domain\Cell\CellInputComment
      mappedBy: cell
      cascade: [ persist, remove ]

  manyToOne:
    granularity:
      targetEntity: Granularity
      inversedBy: cells
      joinColumn:
        name: idGranularity
        referencedColumnName: id

  manyToMany:
    members:
      targetEntity: Member
      inversedBy: cells
      orderBy:
        tag: ASC
      joinTable:
        name: Orga_Cell_Member
        joinColumns:
          idCell:
            referencedColumnName: id
        inverseJoinColumns:
          idMember:
            referencedColumnName: id
    dWResults:
      targetEntity: DW\Domain\Result
      joinTable:
        name: Orga_Cell_DWResults
        joinColumns:
          idCell:
            referencedColumnName: id
            nullable: false
            onDelete: CASCADE
        inverseJoinColumns:
          idDWResult:
            referencedColumnName: id
            nullable: false
            unique: true
            onDelete: CASCADE
      cascade: [ persist, remove ]

  indexes:
    membersHashKey:
      columns: [membersHashKey]
