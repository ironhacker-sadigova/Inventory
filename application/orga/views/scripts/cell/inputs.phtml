<?php
$inventoryStatusList = [
    Orga_Model_Cell::STATUS_NOTLAUNCHED => __('Orga', 'inventory', 'notLaunched'),
    Orga_Model_Cell::STATUS_ACTIVE => __('UI', 'property', 'open'),
    Orga_Model_Cell::STATUS_CLOSED => __('UI', 'property', 'closed')
];
$columnStateInput = new UI_Datagrid_Col_List('stateInput', __('Orga', 'input', 'inputStatus'));
$imageFinished = new UI_HTML_Image('images/af/bullet_green.png', 'finish');
$imageComplete = new UI_HTML_Image('images/af/bullet_orange.png', 'complet');
$imageCalculationIncomplete = new UI_HTML_Image('images/af/bullet_red.png', 'incompletecomplete');
$imageInputIncomplete = new UI_HTML_Image('images/af/bullet_red.png', 'incomplet');
$imageInputNotStarted = new UI_HTML_Image('images/af/bullet_red.png', 'incomplet');
$inputStatusList = [
    AF_Model_InputSet_Primary::STATUS_FINISHED => $imageFinished->render() . ' ' . __('AF', 'inputInput', 'statusFinished'),
    AF_Model_InputSet_Primary::STATUS_COMPLETE => $imageComplete->render() . ' ' . __('AF', 'inputInput', 'statusComplete'),
    AF_Model_InputSet_Primary::STATUS_CALCULATION_INCOMPLETE => $imageCalculationIncomplete->render() . ' ' . __('AF', 'inputInput', 'statusCalculationIncomplete'),
    AF_Model_InputSet_Primary::STATUS_INPUT_INCOMPLETE => $imageInputIncomplete->render() . ' ' . __('AF', 'inputInput', 'statusInputIncomplete'),
    null => $imageInputNotStarted->render() . ' ' . __('AF', 'inputInput', 'statusNotStarted')
];
$inputStatusStyleList = [
    AF_Model_InputSet_Primary::STATUS_FINISHED => 'progress-success',
    AF_Model_InputSet_Primary::STATUS_COMPLETE => 'progress-warning',
    AF_Model_InputSet_Primary::STATUS_CALCULATION_INCOMPLETE => 'progress-danger',
    AF_Model_InputSet_Primary::STATUS_INPUT_INCOMPLETE => 'progress-danger',
    null => 'progress-danger'
];
/** @var Orga_Model_Cell $cell */
$cell = $this->cell;
?>

<style>
    .granularity > .firstRowCell {
        margin-left: 0;
    }
</style>

<div class="page-header">
    <h1><?=$this->pageTitle?></h1>
</div>

<div class="row-fluid">
    <div class="span10">
        <?php
        foreach ($this->cells as $granularityCells) {
            /** @var Orga_Model_Granularity $granularity */
            $granularity = $granularityCells['granularity'];
        ?>
        <h3>
            <?=$granularity->getLabel()?>
            <small>
                <a href="#">
                    <i class="icon-search"></i>
                    Voir les données
                </a>
            </small>
            <?php
            if ($granularity->hasAxes()) {
            ?>
            <form class="form-inline cells-filter">
                <?php
                foreach ($granularity->getAxes() as $axis) {
                ?>
                <select>
                    <option value="">Tout <?=$axis->getLabel()?></option>
                    <?php
                    foreach ($axis->getMembers() as $member) {
                    ?>
                    <option value="<?=$member->getCompleteRef()?>"><?=$member->getLabel()?></option>
                    <?php
                    }
                    ?>
                </select>
                <?php
                }
                ?>
                <button class="btn reset"><i class="icon-zoom-out"></i> Reset</button>
            </form>
            <?php
            }
            ?>
        </h3>
        <div class="row-fluid granularity">
            <?php
            /** @var $cell Orga_Model_Cell */
            foreach ($granularityCells['cells'] as $cell) {
        //        if ($inputCell->getInventoryStatus() == Orga_Model_Cell::STATUS_ACTIVE) {
                    try {
                        $aFInputPrimarySet = $cell->getAFInputSetPrimary();
                        $inputCompletePercentage = $aFInputPrimarySet->getCompletion();
                        $inputStatus = $aFInputPrimarySet->getStatus();
                    } catch (Core_Exception_UndefinedAttribute $e) {
                        $inputCompletePercentage = 0;
                        $inputStatus = null;
                    }
                    $cellMembers = array_map(function (Orga_Model_Member $member) { return $member->getCompleteRef(); }, $cell->getMembers());
            ?>
            <div class="span4 well cell" data-members="<?=implode(' ', $cellMembers)?>">
                <h3><a href="orga/cell/input/idCell/23/fromIdCell/<?=$cell->getId()?>"><?=$cell->getLabel()?></a></h3>
                <p>
                    <a data-toggle="modal" data-target="#<?=$cell->getId()?>administrators" href="#"
                        ><i class="icon-search"></i>
                        Contacter les administrateurs
                    </a>
                </p>
                <p>
                    <b><?=__('Orga', 'inventory', 'inventoryStatus')?>&nbsp;:&nbsp;</b>
                    <?=$inventoryStatusList[$cell->getInventoryStatus()]?>
                </p>
                <p>
                    <b><?=__('Orga', 'input', 'inputStatus')?>&nbsp;:&nbsp;</b>
                    <?=$inputStatusList[$inputStatus]?>
                </p>
                <div class="progress <?=$inputStatusStyleList[$inputStatus]?>">
                    <div class="bar" style="width: <?=$inputCompletePercentage?>%"><?=$inputCompletePercentage?> %</div>
                </div>
            </div>
            <div id="<?=$cell->getId()?>administrators" class="modal hide fade">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4>Administrateur de <?=$cell->getLabel()?></h4>
                </div>
                <div class="modal-body">
        <pre>administrator@parentcell.com
        administrator@organization.com
        administrator@site.com</pre>
                </div>
            </div>
                    <?php
        //        }
            }
            ?>
        </div>
        <hr>
        <?php
        }
        ?>
    </div>
    <div class="span2">
        <div class="well">
            <h4>Historique</h4>
            <hr/>
            <ul>
                <li>X à compléter une saise</li>
                <li>Y à commenter une saise</li>
            </ul>
        </div>
        <div class="well">
            <h4>Ajouter un membre</h4>
            <hr/>
        </div>
    </div>
</div>
<script>
    $('.cells-filter button.reset').click(function(e) {
        e.preventDefault();
        var form = $(e.target).parent();
        var granularity = form.parent().next();
        $('.cell', granularity).removeClass('hide');
        $('.cell', granularity).removeClass('firstRowCell');
        $('.cell:nth-child(3n+1)', granularity).each(function() { $(this).addClass('firstRowCell'); });
        $('select', form).each(function() { $(this).val(''); });
    });
    $('.cells-filter select').change(function(e) {
        e.preventDefault();
        var form = $(e.target).parent();
        var granularity = form.parent().next();

        $('.cell', granularity).removeClass('hide');
        $('.cell', granularity).removeClass('firstRowCell');

        var test = '';
        $('select', form).each(function() {
            var value = $(this).val();
            if (value != '') {
                test += '[data-members*=\'' + value + '\']';
            }
        });
        if (test != '') {
            granularityCells = $('.cell:not('+ test + ')', granularity);
            granularityCells.addClass('hide');
        }

        var numberElement = 0;
        $('.cell:not(.hide)', granularity).each(function() {
            if ((numberElement % 3) == 0) {
                $(this).addClass('firstRowCell');
            }
            numberElement++;
        });
    });
</script>
