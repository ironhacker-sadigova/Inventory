<?php
/**
 * @author valentin.claras
 * @author cyril.perraud
 * @package DW
 * @subpackage View
 */
use MyCLabs\MUIH\Button;
use MyCLabs\MUIH\GenericTag;
use MyCLabs\MUIH\GenericVoidTag;
use MyCLabs\MUIH\Icon;
use MyCLabs\MUIH\Modal;
use MyCLabs\MUIH\Tab;
use MyCLabs\MUIH\Tabs;
?>

<div class="page-header">
    <h1 id="reportLabel"><?=$this->reportLabel?><?=$this->viewConfiguration->getComplementaryPageTitle()?></h1>
    <div>
        <?php if ($this->isNew) : ?>
        <a id="exportAsPdf" href="javascript: void(0)" class="btn btn-default disabled">
            <img src="images/dw/pdf_gris.png" alt="pdf" />
        <?php else : ?>
        <a id="exportAsPdf" href="dw/report/pdf/idCube/<?=$this->idCube?>/hashReport/<?=$this->hashReport?>" class="btn btn-default">
            <img src="images/dw/pdf.png" alt="pdf" />
        <?php endif;?>
            <?=__('UI', 'verb','exportToPDF')?>
        </a>
        <?php if ($this->isNew) : ?>
        <a id="exportAsExcel" href="javascript: void(0)" class="btn btn-default disabled">
            <img src="images/dw/xls_gris.png" alt="xls" />
        <?php else : ?>
        <a id="exportAsExcel" href="dw/report/excel/idCube/<?=$this->idCube?>/hashReport/<?=$this->hashReport?>" class="btn btn-default">
            <img src="images/dw/xls.png" alt="xls" />
        <?php endif; ?>
            <?=__('UI', 'verb','exportToExcel')?>
        </a>
        <div class="pull-right">
            <?=$this->button(__('UI', 'other', 'backButton'))->prependIcon('arrow-left')->link($this->viewConfiguration->getOutputUrl())?>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-2 well" id="configurationPanel">
        <p>
            <!-- <h2><?=__('UI', 'name', 'configuration')?></h2>  -->
            <span id="reportState" class="label label-<?=($this->isNew)?'warning':'success'?>">
                <i class="fa fa-info-circle"></i>
                <?php
                if (($this->viewConfiguration->canBeUpdated()) || ($this->viewConfiguration->canBeSavedAs())) {
                    if ($this->isNew) {
                        echo __('DW', 'config', 'reportNotSaved');
                    } else {
                        echo __('DW', 'config', 'reportSavedAndNotChanged');
                    }
                } else {
                    if ($this->isNew) {
                        echo __('DW', 'config', 'reportNotLaunched');
                    } else {
                        echo __('DW', 'config', 'reportLaunched');
                    }
                }
                ?>
            </span>
        </p>
        <p>
        <?php if (($this->viewConfiguration->canBeUpdated()) || ($this->viewConfiguration->canBeSavedAs())) : ?>
        <?php
            $saveReportDisplayPopupButton = new Button(__('UI', 'verb', 'save'));
            $saveReportDisplayPopupButton->setAttribute('id', 'saveReportButton');
            $saveReportDisplayPopupButton->prependContent(' ');
            $saveReportDisplayPopupButton->prependContent(new Icon('hdd'));
            $saveReportDisplayPopupButton->setAttribute('href', '#');
            $saveReportDisplayPopupButton->setAttribute('data-toggle', 'modal');
            if ($this->isNew) {
                $saveReportDisplayPopupButton->addClass('disabled');
                $saveReportDisplayPopupButton->setAttribute('data-target', '#');
                $saveReportDisplayPopupButton->setAttribute('title', __('DW', 'config', 'applyNeededBeforeSaveReportTooltip'));
            } else {
                $saveReportDisplayPopupButton->addClass('btn-primary');
                $saveReportDisplayPopupButton->setAttribute('data-target', '#saveReport');
            }
            $saveReportDisplayPopupButton->display();

            $saveReportForm = new GenericTag('form');
            $saveReportForm->setAttribute('id', 'saveReport_'.$this->hashReport);
            $saveReportForm->setAttribute('action', 'dw/report/save/idCube/'.$this->idCube.'/hashReport/'.$this->hashReport);
            $saveReportForm->setAttribute('method', 'POST');
            $saveReportForm->addClass('form-horizontal');

            // Utile pour les actions de notification javascript.
            //  0 (false) indique un formulaire chargÃ©.
            //  1 (true)  indique un nouveau formulaire.
            $isNewInput = new GenericVoidTag('input');
            $isNewInput->setAttribute('type', 'hidden');
            $isNewInput->setAttribute('name', 'isNew');
            $isNewInput->setAttribute('value', $this->isNew);
            $saveReportForm->appendContent($isNewInput);

            if ((!$this->isNew) && ($this->viewConfiguration->canBeUpdated() || $this->viewConfiguration->canBeSavedAs())) {
                $saveReportTypeChoiceGroup = new GenericTag('div');
                $saveReportTypeChoiceGroup->addClass('form-group');
                $saveReportForm->appendContent($saveReportTypeChoiceGroup);
                if ($this->viewConfiguration->canBeUpdated()) {
                    $updateReportOptionInput = new GenericVoidTag('input');
                    $updateReportOptionInput->setAttribute('type', 'radio');
                    $updateReportOptionInput->setAttribute('name', 'saveReportType');
                    $updateReportOptionLabel = new GenericTag('label', __('DW', 'config', 'updateReportOption'));
                    $updateReportOptionLabel->prependContent($updateReportOptionInput);
                    $updateReportOptionWrapper = new GenericTag('div', $updateReportOptionLabel);
                    $updateReportOptionWrapper->addClass('radio');
                    $updateReportOptionWrapper->addClass('col-xs-offset-2 col-xs-10');
                    $saveReportTypeChoiceGroup->appendContent($updateReportOptionWrapper);
                }
                if ($this->viewConfiguration->canBeSavedAs()) {
                    $saveReportAsOptionInput = new GenericVoidTag('input');
                    $saveReportAsOptionInput->setAttribute('type', 'radio');
                    $saveReportAsOptionInput->setAttribute('name', 'saveReportType');
                    $saveReportAsOptionLabel = new GenericTag('label', __('DW', 'config', 'saveReportAsOption'));
                    $saveReportAsOptionLabel->prependContent($saveReportAsOptionInput);
                    $saveReportAsOptionWrapper = new GenericTag('div', $saveReportAsOptionLabel);
                    $saveReportAsOptionWrapper->addClass('radio');
                    $saveReportAsOptionWrapper->addClass('col-xs-offset-2 col-xs-10');
                    $saveReportTypeChoiceGroup->appendContent($saveReportAsOptionWrapper);
                }
                if ($this->viewConfiguration->canBeUpdated()) {
                    $updateReportOptionInput->setBooleanAttribute('checked');
                } else {
                    $saveReportAsOptionInput->setBooleanAttribute('checked');
                }
            }

            $reportLabelInput = new GenericVoidTag('input');
            $reportLabelInput->setAttribute('id', 'reportLabel');
            $reportLabelInput->setAttribute('name', 'reportLabel');
            $reportLabelInput->setBooleanAttribute('required');
            $reportLabelInput->addClass('form-control');
            if (!$this->isNew) {
                $reportLabelInput->setAttribute('value', $this->reportLabel);
            }
            $reportLabelWrapper = new GenericTag('div', $reportLabelInput);
            $reportLabelWrapper->addClass('col-xs-10');
            $reportLabelLabel = new GenericTag('label', __('UI', 'name', 'label'));
            $reportLabelLabel->setAttribute('for', 'reportLabel');
            $reportLabelLabel->addClass('control-label');
            $reportLabelLabel->addClass('col-xs-2');
            $reportLabelGroup = new GenericTag('div');
            $reportLabelGroup->appendContent($reportLabelLabel);
            $reportLabelGroup->appendContent($reportLabelWrapper);
            $reportLabelGroup->addClass('form-group');
            $saveReportForm->appendContent($reportLabelGroup);

            $saveReportButton = new Button(__('UI', 'verb', 'save'), Button::TYPE_PRIMARY);
            $saveReportButton->prependContent(' ');
            $saveReportButton->prependContent(new Icon('check'));
            $saveReportButton->setAttribute('onclick', '$(\'#saveReport_'.$this->hashReport.'\').submit();');

            $saveReportClosePopupButton = new Button(__('UI', 'verb', 'cancel'));
            $saveReportClosePopupButton->prependContent(' ');
            $saveReportClosePopupButton->prependContent(new Icon('remove'));
            $saveReportClosePopupButton->closeModal('saveReport');

            $saveReportPopup = new Modal($saveReportForm, __('DW', 'config', 'saveReportPopupTitle'));
            $saveReportPopup->setAttribute('id', 'saveReport');
            $saveReportPopup->getFooter()->appendContent($saveReportButton);
            $saveReportPopup->getFooter()->appendContent(' ');
            $saveReportPopup->getFooter()->appendContent($saveReportClosePopupButton);
            $saveReportPopup->display();

            $this->headScript()->appendScript('$(document).ready(function(){'.$saveReportForm->getScript().'});');
        ?>
        <?php endif; ?>
        </p>
        <hr>
        <div>
            <?=$this->configurationForm?>
        </div>
    </div>
    <div id="reportContent" class="col-xs-9">
        <?php
        $tabView = new Tabs();

        $tabGraph = new Tab('reportChart', __('DW', 'name', 'chart'), 'dw/report/graph/idCube/'.$this->idCube.'/hashReport/'.$this->hashReport);
        $tabGraph->setAjax(true, true);
        $tabView->addTab($tabGraph);
        if (!$this->isNew) {
            $tabView->activeTab($tabGraph);
        }
        UI_Chart_Generic::addHeader();

        $tabValues = new Tab('reportValues', __('UI', 'name', 'values'), 'dw/report/values/idCube/'.$this->idCube.'/hashReport/'.$this->hashReport);
        $tabValues->setAjax(true, true);
        $tabView->addTab($tabValues);
        UI_Datagrid::addHeader();

        $tabView->display();

        $script = '';

        // Fonction de rÃ©cupÃ©ration de l'image.
        $script .= 'function getImageData(idChart) {';
        $script .= 'var chartArea = $(\'#\' + idChart + \' div:first-child div:first-child\')[0];';
        $script .= 'var svg = chartArea.innerHTML.replace(/&nbsp;/g, " ");';
        $script .= 'var doc = chartArea.ownerDocument;';
        $script .= 'var canvas = doc.createElement( \'canvas\');';
        $script .= 'canvas.setAttribute(\'width\', chartArea.offsetWidth);';
        $script .= 'canvas.setAttribute(\'height\', chartArea.offsetHeight);';
        $script .= 'canvas.setAttribute(\'style\', ';
        $script .= '\'position: absolute; \'';
        $script .= ' +\'top: \' + (-chartArea.offsetHeight * 2) + \'px; \'';
        $script .= ' +\'left: \' + (-chartArea.offsetWidth * 2) + \'px;\'';
        $script .= ');';
        $script .= 'doc.body.appendChild(canvas);';
        $script .= 'canvg(canvas, svg);';
        $script .= 'var imgData = canvas.toDataURL(\'image/png\');';
        $script .= 'canvas.parentNode.removeChild(canvas);';
        $script .= 'return imgData;';
        $script .= '}';
        // Fonction de rÃ©cupÃ©ration de l'image.
        $script .= 'function saveImageData(e) {';
        $script .= 'if (!($(e.target).hasClass(\'disabled\'))) {';
        $script .= 'e.preventDefault();';
        $script .= '$.post(';
        $script .= '\'dw/report/saveimagedata\',';
        $script .= '{idCube: '.$this->idCube.', name: \'pdfChart\', image: getImageData(\'reportChart\')},';
        $script .= 'function(){';
        $script .= 'window.location = $(e.target).prop(\'href\');';
        $script .= '}';
        $script .= ').error(function() {';
        $script .= 'addMessage(\''.addslashes(__('DW', 'report', 'unableToSaveChartImage')).'\', \'error\');';
        $script .= 'window.location = $(e.target).prop(\'href\');';
        $script .= '});';
        $script .= '}';
        $script .= '}';
        // Changement du fonctionnement initial du lien d'export Pdf.
        $script .= '$(\'#exportAsPdf\').click(saveImageData);';

        $this->headScript()->appendFile('http://canvg.googlecode.com/svn/trunk/rgbcolor.js', 'text/javascript');
        $this->headScript()->appendFile('http://canvg.googlecode.com/svn/trunk/canvg.js', 'text/javascript');
        $this->headScript()->appendScript('$(document).ready(function(){'.$script.'});');
        ?>
    </div>
</div>

<script type="text/javascript">
$(document).ready(function() {
    <?php // Gestion des actions du formulaire. ?>
    $('input[name="typeSumRatioChoice"]').on('change', function() {
        var currentForm = $(this).closest('form');

        $('select[name="numeratorIndicator"]').closest('.form-group').addClass('hide');
        $('select[name="denominatorIndicator"]', currentForm.first())
            .closest('.form-group').addClass('hide');
        $('select[name="ratioNumeratorAxisOne"]', currentForm.first())
            .closest('fieldset').addClass('hide');
        $('select[name="ratioDenominatorAxisOne"]', currentForm.first())
            .closest('fieldset').addClass('hide');
        $('select[name="sumAxisOne"]', currentForm.first())
            .closest('fieldset').addClass('hide');

        if ($('input[name="typeSumRatioChoice"]:checked', currentForm).val() == 'ratio') {
            $('select[name="numeratorIndicator"]').closest('.form-group').removeClass('hide');
            $('select[name="denominatorIndicator"]', currentForm.first())
                .closest('.form-group').removeClass('hide');
            $('select[name="ratioNumeratorAxisOne"]', currentForm.first())
                .closest('fieldset').removeClass('hide');
            $('select[name="ratioDenominatorAxisOne"]', currentForm.first())
                .closest('fieldset').removeClass('hide');
            $('input[name="ratioAxisNumberChoice"]:checked', currentForm).trigger('change');
        } else if ($('input[name="typeSumRatioChoice"]:checked', currentForm).val() == 'sum') {
            $('select[name="numeratorIndicator"]').closest('.form-group').removeClass('hide');
            $('select[name="sumAxisOne"]', currentForm.first())
                .closest('fieldset').removeClass('hide');
            $('input[name="sumAxisNumberChoice"]:checked', currentForm).trigger('change');
        }
    });
    $('input[name="sumAxisNumberChoice"]').on('change', function() {
        var currentForm = $(this).closest('form');

        $('select[name="sumAxisTwo"]', currentForm.first())
            .closest('.form-group').addClass('hide');
        $('select[name="resultsOrder"]', currentForm.first())
            .closest('.form-group').addClass('hide');

        if ($('input[name="sumAxisNumberChoice"]:checked', currentForm).val() == 'two') {
            $('select[name="sumAxisTwo"]', currentForm.first())
                .closest('.form-group').removeClass('hide');
        } else if ($('input[name="sumAxisNumberChoice"]:checked', currentForm).val() == 'one') {
            $('select[name="resultsOrder"]', currentForm.first())
                .closest('.form-group').removeClass('hide');
        }
    });
    $('input[name="ratioAxisNumberChoice"]').on('change', function() {
        var currentForm = $(this).closest('form');

        $('select[name="ratioNumeratorAxisTwo"]', currentForm.first())
            .closest('.form-group').addClass('hide');
        $('select[name="ratioDenominatorAxisTwo"]', currentForm.first())
            .closest('.form-group').addClass('hide');
        $('select[name="resultsOrder"]', currentForm.first())
            .closest('.form-group').addClass('hide');

        if ($('input[name="ratioAxisNumberChoice"]:checked', currentForm).val() == 'two') {
            $('select[name="ratioNumeratorAxisTwo"]', currentForm.first())
                .closest('.form-group').removeClass('hide');
            $('select[name="ratioDenominatorAxisTwo"]', currentForm.first())
                .closest('.form-group').removeClass('hide');
        } else if ($('input[name="ratioAxisNumberChoice"]:checked', currentForm).val() == 'one') {
            $('select[name="resultsOrder"]', currentForm.first())
                .closest('.form-group').removeClass('hide');
        }
    });
    $('input[name="sumAxisNumberChoice"], input[name="ratioAxisNumberChoice"]').on('change', function() {
        var currentForm = $(this).closest('form');

        var selectDisplayType = $('select[name="displayType"]', currentForm);
        if ((typeof(selectDisplayType.attr('data-options')) === 'undefined')
            || (selectDisplayType.attr('data-options') === false)) {
            selectDisplayType.attr('data-options', selectDisplayType.html());
        }
        selectDisplayType.html(selectDisplayType.attr('data-options'));
        $('select[name="displayType"] option:not(.' + $('input[name="' + $('input[name="typeSumRatioChoice"]:checked', currentForm).val() + 'AxisNumberChoice"]:checked', currentForm).val() + ')', currentForm).remove();
        selectDisplayType.trigger('change');
    });
    $('input[name="sumAxisNumberChoice"], input[name="ratioAxisNumberChoice"]').trigger('change');
    $('select[name="displayType"]').on('change', function() {
        var currentForm = $(this).closest('form');

        if ($(this).val() == 'pie_chart') {
            $('input[name="uncertaintyChoice"]', currentForm.first())
                .closest('.form-group').addClass('hide');
        } else {
            $('input[name="uncertaintyChoice"]', currentForm.first())
                .closest('.form-group').removeClass('hide');
        }
    });
    $('input.filterMemberNumber').on('change', function() {
        var currentForm = $(this).closest('form');

        if ($('input[name="' + $(this).attr('name') + '"]:checked', currentForm).val() == 'all') {
            $('select', $(this).closest('fieldset')).closest('.form-group').addClass('hide');
        } else {
            $('select', $(this).closest('fieldset')).closest('.form-group').removeClass('hide');
        }
        if ($('input[name="' + $(this).attr('name') + '"]:checked', currentForm).val() == 'several') {
            $('select', $(this).closest('fieldset')).attr('multiple', true);
        } else {
            $('select', $(this).closest('fieldset')).removeAttr('multiple');
        }
    });

    <?php // DÃ©claration du formulaire ajax. ?>
    var configurationForm = new AjaxForm('#form_<?=$this->hashReport?>');
    configurationForm.addErrors = function (data)
    {
        for (var name in data.errorMessages) {
            if (! data.errorMessages.hasOwnProperty(name)) {
                continue;
            }

            var inputLine = configurationForm.form.find('[name="' + name + '"]').first().parents('.form-group');
            inputLine.append(
                '<span class="help-block errorMessage">' +
                data.errorMessages[name] +
                '</span>'
            );

            if (! inputLine.hasClass('has-error')) {
                inputLine.addClass('has-error');
            }
        }
    };
    var configurationFormHasChanged = false;

    <?php // DÃ©tection d'un changement sur le formulaire. ?>
    $('#form_<?=$this->hashReport?>').on('change', 'input, select', function() {
        configurationFormHasChanged = true;
        $('#reportState').attr('class', 'label label-danger');
        $('#reportState').html('<i class="fa fa-exclamation-circle"></i> <?=___('DW', 'config', 'reportChangedApplyRequired')?>');
        <?php if (($this->viewConfiguration->canBeUpdated()) || ($this->viewConfiguration->canBeSavedAs())) : ?>
            $('#saveReportButton').attr('class', 'btn btn-default disabled');
            $('#saveReportButton').attr('data-target', '#');
            $('#saveReportButton').attr('title', '<?=___('DW', 'config', 'applyNeededBeforeSaveReportTooltip')?>');
        <?php endif; ?>
        $('#exportAsPdf').attr('class', 'btn btn-default disabled');
        $('#exportAsPdf').attr('href', 'javascript: void(0)');
        $('#exportAsPdf img').attr('src', 'images/dw/pdf_gris.png');
        $('#exportAsExcel').attr('class', 'btn btn-default disabled');
        $('#exportAsExcel').attr('href', 'javascript: void(0)');
        $('#exportAsExcel img').attr('src', 'images/dw/xls_gris.png');
    });
    <?php // DÃ©tection d'un reset sur le formulaire ?>
    $('#form_<?=$this->hashReport?> button[type="reset"]').on('click', function(e) {
        e.preventDefault();
        $(this).closest('form').get(0).reset();
        $('#form_<?=$this->hashReport?> input, #form_<?=$this->hashReport?> select').trigger('change');
        <?php if ($this->isNew) : ?>
            $('#reportState').attr('class', 'label label-warning');
            <?php if (($this->viewConfiguration->canBeUpdated()) || ($this->viewConfiguration->canBeSavedAs())) : ?>
                $('#reportState').html('<i class="fa fa-info-circle"></i> <?=___('DW', 'config', 'reportNotSaved')?>');
                $('#saveReportButton').attr('class', 'btn btn-default disabled');
                $('#saveReportButton').attr('data-target', '#');
                $('#saveReportButton').attr('title', '<?=___('DW', 'config', 'applyNeededBeforeSaveReportTooltip')?>');
            <?php else : ?>
                $('#reportState').html('<i class="fa fa-info-circle"></i> <?=___('DW', 'config', 'reportNotLaunched')?>');
                $('#reportChart').empty();
                $('#reportValues').empty();
                $('#reportContent li').addClass('disabled');
                if ($('li a[href="#reportChart"]').closest('li').hasClass('active')) {
                    $('li a[href="#reportChart"]').closest('li').removeClass('active');
                }
                if ($('li a[href="#reportValues"]').closest('li').hasClass('active')) {
                    $('li a[href="#reportValues"]').closest('li').removeClass('active');
                }
            <? endif; ?>
        <?php else : ?>
            $('#exportAsPdf').attr('class', 'btn');
            $('#exportAsPdf').attr('href', 'dw/report/pdf/idCube/<?=$this->idCube?>/hashReport/<?=$this->hashReport?>');
            $('#exportAsPdf img').attr('src', 'images/dw/pdf.png');
            $('#exportAsExcel').attr('class', 'btn btn-default');
            $('#exportAsExcel').attr('href', 'dw/report/excel/idCube/<?=$this->idCube?>/hashReport/<?=$this->hashReport?>');
            $('#exportAsExcel img').attr('src', 'images/dw/xls.png');
            $('#reportState').attr('class', 'label label-success');
            <?php if (($this->viewConfiguration->canBeUpdated()) || ($this->viewConfiguration->canBeSavedAs())) : ?>
                $('#reportState').html('<i class="fa fa-info-circle"></i> <?=___('DW', 'config', 'reportSavedAndNotChanged')?>');
                $('#saveReportButton').attr('class', 'btn btn-primary');
                $('#saveReportButton').attr('data-target', '#saveReport');
                $('#saveReportButton').attr('title', '');
            <? else : ?>
                $('#reportState').html('<i class="fa fa-info-circle"></i> <?=___('DW', 'config', 'reportLaunched')?>');
                if (configurationFormHasChanged == true) {
                    $('#form_<?=$this->hashReport?>').submit();
                }
            <? endif; ?>
        <?php endif; ?>
    });
    
    <?php // Ecoute de la soumission du formulaire de configuration. ?>
    $('#form_<?=$this->hashReport?>').on('successSubmit', function() {
        <?php if (($this->viewConfiguration->canBeUpdated()) || ($this->viewConfiguration->canBeSavedAs())) : ?>
            <?php if ($this->isNew) : ?>
                if (configurationFormHasChanged == true) {
                    $('#reportState').attr('class', 'label label-warning');
                    $('#reportState').html('<i class="fa fa-exclamation-triangle"></i> <?=___('DW', 'config', 'reportChangedSaveRequired')?>');
                }
            <?php else : ?>
                $('#reportState').attr('class', 'label label-warning');
                $('#reportState').html('<i class="fa fa-info-circle"></i> <?=___('DW', 'config', 'reportNotSaved')?>');
            <?php endif ?>
        <?php else : ?>
            $('#reportState').attr('class', 'label label-success');
            $('#reportState').html('<i class="fa fa-info-circle"></i> <?=___('DW', 'config', 'reportLaunched')?>');
        <?php endif; ?>
        <?php if (($this->viewConfiguration->canBeUpdated()) || ($this->viewConfiguration->canBeSavedAs())) : ?>
            $('#saveReportButton').attr('class', 'btn btn-primary');
            $('#saveReportButton').attr('data-target', '#saveReport');
            $('#saveReportButton').attr('title', '');
        <?php endif; ?>
        $('#exportAsPdf').attr('class', 'btn btn-default');
        $('#exportAsPdf').attr('href', 'dw/report/pdf/idCube/<?=$this->idCube?>/hashReport/<?=$this->hashReport?>');
        $('#exportAsPdf img').attr('src', 'images/dw/pdf.png');
        $('#exportAsExcel').attr('class', 'btn btn-default');
        $('#exportAsExcel').attr('href', 'dw/report/excel/idCube/<?=$this->idCube?>/hashReport/<?=$this->hashReport?>');
        $('#exportAsExcel img').attr('src', 'images/dw/xls.png');
        <?php if ($this->isNew) : ?>
            if ($('li a[href="#reportChart"]').closest('li').hasClass('disabled')) {
                $('li a[href="#reportChart"]').closest('li').removeClass('disabled');
            }
            if ($('li a[href="#reportValues"]').closest('li').hasClass('disabled')) {
                $('li a[href="#reportValues"]').closest('li').removeClass('disabled');
            }
        <?php endif; ?>
        $('#reportChart').attr('data-cached', false);
        $('#reportValues').attr('data-cached', false);
        if ($('li a[href="#reportChart"]').closest('li').hasClass('active')) {
            $('li a[href="#reportChart"]').closest('li').removeClass('active');
        }
        $('li a[href="#reportChart"]').tab('show');
    });
    $('#reportContent li').on('click', function(e) {
        if ($(this).hasClass('disabled')) {
            e.preventDefault();
            e.stopPropagation();
            return false;
        }
    });
    <?php if ($this->isNew) : ?>
        $('#reportContent li').addClass('disabled');
    <?php endif; ?>

    <?php // DÃ©claration du formulaire ajax de sauvegarde du rapport. ?>
    var saveForm = new AjaxForm('#saveReport_<?=$this->hashReport?>');

    <?php // Ecoute de la soumission du formulaire de sauvegarde. ?>
    $('#saveReport_<?=$this->hashReport?>').on('successSubmit', function(e, response) {
        window.location.replace('<?=$this->viewConfiguration->getSaveURL()?>/idReport/' + response.idReport);
    });
});
</script>
<style>
    #form_<?=$this->hashReport?> fieldset {
        background: none;
    }
    #form_<?=$this->hashReport?> div.form-group.actions {
        margin-top: 15px;
    }
</style>

<?= $this->tutorial('dw'); ?>