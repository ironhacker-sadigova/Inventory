<?php
/**
 * @author  matthieu.napoli
 * @package AF
 */
/** @var $condition AF_Model_Condition_Elementary */
$condition = $this->condition;

$form = new UI_Form('updateCondition');
$form->setAjax(false);
$form->setAction('af/edit_conditions/update-condition-submit/idCondition/' . $condition->getId());

// Relation
$relationSelect = new UI_Form_Element_Select('relation');
$relationSelect->setLabel(__('UI', 'name', 'relation'));
$relationSelect->setValue($condition->getRelation());
$form->addElement($relationSelect);
// Options de la liste
$optionEqual = new UI_Form_Element_Option('equal', AF_Model_Condition_Elementary::RELATION_EQUAL);
$optionEqual->label = __('AF', 'configInteractionDatagrid', 'equalOption');
$optionNotEqual = new UI_Form_Element_Option('nequal', AF_Model_Condition_Elementary::RELATION_NEQUAL);
$optionNotEqual->label = __('AF', 'configInteractionDatagrid', 'differentOption');
$optionSuperior = new UI_Form_Element_Option('gt', AF_Model_Condition_Elementary::RELATION_GT);
$optionSuperior->label = __('AF', 'configInteractionDatagrid', 'greaterOption');
$optionInferior = new UI_Form_Element_Option('lt', AF_Model_Condition_Elementary::RELATION_LT);
$optionInferior->label = __('AF', 'configInteractionDatagrid', 'lowerOption');
$optionSuperiorOrEqual = new UI_Form_Element_Option('ge', AF_Model_Condition_Elementary::RELATION_GE);
$optionSuperiorOrEqual->label = __('AF', 'configInteractionDatagrid', 'greaterOrEqualOption');
$optionInferiorOrEqual = new UI_Form_Element_Option('le', AF_Model_Condition_Elementary::RELATION_LE);
$optionInferiorOrEqual->label = __('AF', 'configInteractionDatagrid', 'lowerOrEqualOption');
$optionContains = new UI_Form_Element_Option('contains', AF_Model_Condition_Elementary::RELATION_CONTAINS);
$optionContains->label = __('AF', 'configInteractionDatagrid', 'containsOption');
$optionNotContains = new UI_Form_Element_Option('ncontains', AF_Model_Condition_Elementary::RELATION_NCONTAINS);
$optionNotContains->label = __('AF', 'configInteractionDatagrid', 'doesNotContainOption');

if ($condition instanceof AF_Model_Condition_Elementary_Numeric) {
    /** @var $condition AF_Model_Condition_Elementary_Numeric */
    // Relation
    $relationSelect->addOption($optionEqual);
    $relationSelect->addOption($optionNotEqual);
    $relationSelect->addOption($optionSuperior);
    $relationSelect->addOption($optionInferior);
    $relationSelect->addOption($optionSuperiorOrEqual);
    $relationSelect->addOption($optionInferiorOrEqual);
    // Value
    $numericValueField = new UI_Form_Element_Text('value');
    $numericValueField->setLabel(__('UI', 'name', 'referenceValue'));
    $numericValueField->setValue($condition->getValue());
    $form->addElement($numericValueField);
}

if ($condition instanceof AF_Model_Condition_Elementary_Checkbox) {
    /** @var $condition AF_Model_Condition_Elementary_Checkbox */
    // Relation
    $relationSelect->addOption($optionEqual);
    // Value
    $checkboxValueField = new UI_Form_Element_Select('value');
    $checkboxValueField->setLabel(__('UI', 'name', 'referenceValue'));
    $optionChecked = new UI_Form_Element_Option('checked', 1);
    $optionChecked->label = __('UI', 'property', 'checked');
    $checkboxValueField->addOption($optionChecked);
    $optionUncheked = new UI_Form_Element_Option('unchecked', 0);
    $optionUncheked->label = __('UI', 'property', 'unchecked');
    $checkboxValueField->addOption($optionUncheked);
    $checkboxValueField->setValue((int) $condition->getValue());
    $form->addElement($checkboxValueField);
}

if ($condition instanceof AF_Model_Condition_Elementary_Select_Single) {
    /** @var $condition AF_Model_Condition_Elementary_Select_Single */
    // Relation
    $relationSelect->addOption($optionEqual);
    $relationSelect->addOption($optionNotEqual);
    // Value
    $selectField = new UI_Form_Element_Select('value');
    $selectField->setLabel(__('UI', 'name', 'referenceValue'));
    // Ajout d'une option vide
    $selectField->addNullOption('', null);
    /** @var $selectComponent AF_Model_Component_Select_Single */
    $selectComponent = $condition->getField();
    foreach ($selectComponent->getOptions() as $option) {
        $uiOption = new UI_Form_Element_Option($option->getRef(), $option->getId(), $option->getLabel());
        $selectField->addOption($uiOption);
    }
    if ($condition->getOption()) {
        $selectField->setValue($condition->getOption()->getId());
    }
    $form->addElement($selectField);
}

if ($condition instanceof AF_Model_Condition_Elementary_Select_Multi) {
    /** @var $condition AF_Model_Condition_Elementary_Select_Multi */
    // Relation
    $relationSelect->addOption($optionContains);
    $relationSelect->addOption($optionNotContains);
    // Value
    $selectField = new UI_Form_Element_Select('value');
    $selectField->setLabel(__('UI', 'name', 'referenceValue'));
    // Ajout d'une option vide
    $selectField->addNullOption('', null);
    /** @var $selectComponent AF_Model_Component_Select_Multi */
    $selectComponent = $condition->getField();
    foreach ($selectComponent->getOptions() as $option) {
        $uiOption = new UI_Form_Element_Option($option->getRef(), $option->getId(), $option->getLabel());
        $selectField->addOption($uiOption);
    }
    if ($condition->getOption()) {
        $selectField->setValue($condition->getOption()->getId());
    }
    $form->addElement($selectField);
}

echo $form->render();
