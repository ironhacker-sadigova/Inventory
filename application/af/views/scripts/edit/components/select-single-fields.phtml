<?php
/**
 * @author  matthieu.napoli
 * @author  yoann.croizer
 * @package AF
 */
/** @var $af AF_Model_AF */
$af = $this->af;

// Datagrid
$selectDatagrid = new UI_Datagrid('selectSingleFieldDatagrid', 'datagrid_edit_components_select-single-fields', 'af');
$selectDatagrid->initialLoading = false;
$selectDatagrid->addParam('id', $af->getId());
$selectDatagrid->pagination = false;
$selectDatagrid->addElements = true;
$selectDatagrid->addPanelTitle = __('AF', 'configComponentDatagrid', 'singleSelectAddPanelTitle');
$selectDatagrid->deleteElements = true;

// Label
$label = new UI_Datagrid_Col_Text('label', __('UI', 'name', 'label'));
$label->editable = true;
$selectDatagrid->addCol($label);
// Ref
$ref = new UI_Datagrid_Col_Text('ref', __('UI', 'name', 'identifier'));
$ref->editable = true;
$selectDatagrid->addCol($ref);
// Help
$help = new UI_Datagrid_Col_LongText('help', __('UI', 'name', 'help'));
$help->editable = true;
$help->popup->title = __('UI', 'name', 'help');
$selectDatagrid->addCol($help);
// Hidden / Show
$isVisible = new UI_Datagrid_Col_Bool('isVisible', __('AF', 'configComponentDatagrid', 'initialVisibilityHeader'));
$isVisible->editable = true;
$isVisible->defaultAddValue = true;
$isVisible->textTrue = __('UI', 'property', 'visible');
$isVisible->textFalse = __('UI', 'property', 'masked');
$isVisible->valueTrue = '<i class="fa fa-check"></i> '.__('UI', 'property', 'visible');
$isVisible->valueFalse = '<i class="fa fa-times"></i> '.__('UI', 'property', 'masked');
$selectDatagrid->addCol($isVisible);
// Enable / Disable
$enabled = new UI_Datagrid_Col_Bool('enabled', __('AF', 'configComponentDatagrid', 'initialActivationHeader'));
$enabled->editable = true;
$enabled->defaultAddValue = true;
$enabled->textTrue = __('UI', 'property', 'enabled');
$enabled->textFalse = __('UI', 'property', 'disabled');
$enabled->valueTrue = '<i class="fa fa-check"></i> '.__('UI', 'property', 'enabled');
$enabled->valueFalse = '<i class="fa fa-times"></i> '.__('UI', 'property', 'disabled');
$selectDatagrid->addCol($enabled);
// Required
$required = new UI_Datagrid_Col_Bool('required', __('AF', 'configComponentDatagrid', 'requiredHeader'));
$required->editable = true;
$required->defaultAddValue = false;
$required->textTrue = __('UI', 'property', 'required');
$required->textFalse = __('UI', 'property', 'optional');
$required->valueTrue = '<i class="fa fa-check"></i> '.__('UI', 'property', 'required');
$required->valueFalse = '<i class="fa fa-times"></i> '.__('UI', 'property', 'optional');
$selectDatagrid->addCol($required);
// Default Option
$defaultValue = new UI_Datagrid_Col_List('defaultValue', __('AF', 'configComponentDatagrid', 'initialValueHeader'));
$defaultValue->editable = true;
$defaultValue->addable = false;
$defaultValue->dynamicList = true;
$defaultValue->list = 'af/datagrid_edit_components_select-single-fields/get-option-list';
$selectDatagrid->addCol($defaultValue);
// Type list or radio
$selectType = new UI_Datagrid_Col_List('type', __('AF', 'configComponentDatagrid', 'styleHeader'));
$selectType->editable = true;
$selectType->defaultAddValue = AF_Model_Component_Select_Single::TYPE_LIST;
$selectType->withEmptyElement = false;
$selectType->list = [
    AF_Model_Component_Select_Single::TYPE_LIST => __('AF', 'configComponentDatagrid', 'singleSelectOption'),
    AF_Model_Component_Select_Single::TYPE_RADIO => __('AF', 'configComponentDatagrid', 'radioOption'),
];
$selectDatagrid->addCol($selectType);

// Popup des options
$selectOption = new UI_Datagrid_Col_Popup('options', __('UI', 'name', 'options'));
$selectOption->addable = false;
$selectOption->editable = true;
$selectOption->popup->title = __('UI', 'name', 'options');
$selectOption->popup->addAttribute('class', 'large');
$selectDatagrid->addCol($selectOption);

echo $selectDatagrid->render();
